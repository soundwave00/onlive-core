CREATE DATABASE "onlive";

CREATE TABLE onlive.JPORTS (
	PORT int NOT NULL,
	RUNNING BIT NOT NULL,

	PRIMARY KEY (PORT)
);
INSERT INTO onlive.JPORTS VALUES (22124, 0);
INSERT INTO onlive.JPORTS VALUES (22125, 0);
INSERT INTO onlive.JPORTS VALUES (22126, 0);
INSERT INTO onlive.JPORTS VALUES (22127, 0);
INSERT INTO onlive.JPORTS VALUES (22128, 0);
INSERT INTO onlive.JPORTS VALUES (22129, 0);
INSERT INTO onlive.JPORTS VALUES (22130, 0);
INSERT INTO onlive.JPORTS VALUES (22131, 0);
INSERT INTO onlive.JPORTS VALUES (22132, 0);
INSERT INTO onlive.JPORTS VALUES (22133, 0);

CREATE TABLE onlive.EVENTS (
	ID int AUTO_INCREMENT,
	NAME VARCHAR(64) NOT NULL,
	DESCRIPTION VARCHAR(128) NOT NULL,
	DATE_SET DATETIME NOT NULL,
	DATE_START DATETIME,
	DATE_STOP DATETIME,
	PID int,
	PORT INT,
	RUNNING BIT NOT NULL,

	PRIMARY KEY (ID),
    CONSTRAINT FK_JPORTS_EVENTS FOREIGN KEY (PORT)
    REFERENCES onlive.JPORTS(PORT)

);

CREATE TABLE onlive.USERS (
	USERNAME VARCHAR(16) NOT NULL,
	NAME VARCHAR(32) NOT NULL,
	SURNAME VARCHAR(32) NOT NULL,
	PASSWORD VARCHAR(256) NOT NULL,
	SALT VARCHAR(16) NOT NULL,
	EMAIL VARCHAR(32) NOT NULL,
	IS_ACTIVE BIT NOT NULL, 
	DATE_CREATE DATETIME NOT NULL,
	DATE_DELETE DATETIME,
	
	PRIMARY KEY (USERNAME)
);

CREATE TABLE onlive.SESSIONS (
	ID int AUTO_INCREMENT,
	USERNAME VARCHAR(16) NOT NULL,
	COD_TOKEN VARCHAR(16) NOT NULL,
	DATE_START DATETIME NOT NULL,
	DATE_EXP DATETIME NOT NULL,
	
	PRIMARY KEY (ID),
    CONSTRAINT FK_USERS_SESSIONS FOREIGN KEY (USERNAME)
    REFERENCES onlive.USERS(USERNAME)
);

CREATE TABLE onlive.MUSIC_ROLES (
	ID int AUTO_INCREMENT,
	INSTRUMENT VARCHAR(16),

	PRIMARY KEY (ID)
);

CREATE TABLE onlive.GENRES (
	ID INT AUTO_INCREMENT,
	GENRE VARCHAR(32) NOT NULL,

	PRIMARY KEY (ID)
);

CREATE TABLE onlive.GROUPS_ROLES (
	ID INT AUTO_INCREMENT,
	ROLES VARCHAR(16),

	PRIMARY KEY (ID)
);

CREATE TABLE onlive.GROUPS (
	ID int AUTO_INCREMENT,
	NAME VARCHAR(64) NOT NULL,
	DESCRIPTION VARCHAR(128) NOT NULL,

	PRIMARY KEY (ID)
);

CREATE TABLE onlive.FAVORITES_GROUPS (
	USERNAME VARCHAR(16),
	ID_GROUPS INT,

	PRIMARY KEY (USERNAME, ID_GROUPS),

	CONSTRAINT FK_USERS_FAVORITES_GROUPS FOREIGN KEY (USERNAME)  
	REFERENCES onlive.USERS (USERNAME),
    CONSTRAINT FK_GROUPS_FAVORITES_GROUPS FOREIGN KEY (ID_GROUPS) 
    REFERENCES onlive.GROUPS (ID)
);

CREATE TABLE onlive.GROUPS_MEMBERS (
	USERNAME VARCHAR(16),
	ID_GROUPS int,
	
	PRIMARY KEY (USERNAME, ID_GROUPS),
	CONSTRAINT FK_USERS_GROUPS_MEMBERS FOREIGN KEY (USERNAME)  
	REFERENCES onlive.USERS (USERNAME),
    CONSTRAINT FK_GROUPS_GROUPS_MEMBERS FOREIGN KEY (ID_GROUPS) 
    REFERENCES onlive.GROUPS (ID)
);

CREATE TABLE onlive.GROUPS_MEMBERS_GROUPS_ROLES (
	USERNAME VARCHAR(16),
	ID_GROUPS_MEMBERS int,
	ID_GROUPS_ROLES INT,
	
	PRIMARY KEY (USERNAME, ID_GROUPS_MEMBERS, ID_GROUPS_ROLES),
	CONSTRAINT FK_GROUPS_MEMBERS_GROUPS_MEMBERS_GROUPS_ROLES FOREIGN KEY (USERNAME, ID_GROUPS_MEMBERS)  
	REFERENCES onlive.GROUPS_MEMBERS (USERNAME, ID_GROUPS),
    CONSTRAINT FK_GROUPS_ROLES_GROUPS_MEMBERS_GROUPS_ROLES FOREIGN KEY (ID_GROUPS_ROLES) 
    REFERENCES onlive.GROUPS_ROLES (ID)
);

CREATE TABLE onlive.EVENTS_GENRES(
	ID_GENRES INT,
	ID_EVENTS int,
	
	PRIMARY KEY (ID_GENRES, ID_EVENTS),
	CONSTRAINT FK_GENRES_EVENTS_GENRES FOREIGN KEY (ID_GENRES)  
	REFERENCES onlive.GENRES (ID),
    CONSTRAINT FK_EVENTS_EVENTS_GENRES FOREIGN KEY (ID_EVENTS) 
    REFERENCES onlive.EVENTS (ID)
);

CREATE TABLE onlive.USERS_GENRES (
	USERNAME VARCHAR(16),
	ID_GENRES INT,
	
	PRIMARY KEY (USERNAME, ID_GENRES),
	CONSTRAINT FK_USERS_USERS_GENRES FOREIGN KEY (USERNAME)  
	REFERENCES onlive.USERS (USERNAME),
    CONSTRAINT FK_GENRES_USERS_GENRES FOREIGN KEY (ID_GENRES) 
    REFERENCES onlive.GENRES (ID)
);

CREATE TABLE onlive.GROUPS_GENRES (
	ID_GROUPS int,
	ID_GENRES INT,
	
	PRIMARY KEY (ID_GROUPS, ID_GENRES),
	CONSTRAINT FK_GROUPS_GROUPS_GENRES FOREIGN KEY (ID_GROUPS)  
	REFERENCES onlive.GROUPS (ID),
    CONSTRAINT FK_GENRES_GROUPS_GENRES FOREIGN KEY (ID_GENRES) 
    REFERENCES onlive.GENRES (ID)
);

CREATE TABLE onlive.USERS_MUSIC_ROLES (
	USERNAME VARCHAR(16),
	ID_MUSIC_ROLES INT,
	
	PRIMARY KEY (USERNAME, ID_MUSIC_ROLES),
	CONSTRAINT FK_USERS_USERS_MUSIC_ROLES FOREIGN KEY (USERNAME)  
	REFERENCES onlive.USERS (USERNAME),
    CONSTRAINT FK_MUSIC_ROLES_USERS_MUSIC_ROLES FOREIGN KEY (ID_MUSIC_ROLES) 
    REFERENCES onlive.MUSIC_ROLES (ID)
);
